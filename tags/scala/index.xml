<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on Charles&#39; Blog</title>
    <link>http://mims.io/tags/scala/</link>
    <description>Recent content in Scala on Charles&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Charles Mims 2017</copyright>
    <lastBuildDate>Thu, 20 Jul 2017 13:07:12 -0500</lastBuildDate>
    
	<atom:link href="http://mims.io/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional Programming in Scala</title>
      <link>http://mims.io/2017/07/functional-programming-in-scala/</link>
      <pubDate>Thu, 20 Jul 2017 13:07:12 -0500</pubDate>
      
      <guid>http://mims.io/2017/07/functional-programming-in-scala/</guid>
      <description>I&amp;rsquo;ve just completed the first course in the coursera scala specialization series of courses, Functional Programming Principles in Scala.
I&amp;rsquo;m not going to lie, it&amp;rsquo;s a tough course that challenged my hack-it-together python background. My python workflow goes something like this:
Using sublimetext, write a function that takes some object, usually a list or dict, some strings or ints, etc., and return a dict or list, etc. Copy that function and paste it in ipython.</description>
    </item>
    
  </channel>
</rss>